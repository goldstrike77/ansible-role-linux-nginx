#
server {
  add_header Access-Control-Allow-Methods '{{ ", ".join(vars["ngx_allow_methods"]) }}';
  # Enables Content Security Policy (CSP)
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.{{ item.split('.')[-2] }}.{{ item.split('.')[-1] }} *.google-analytics.com; img-src 'self' data: *.{{ item.split('.')[-2] }}.{{ item.split('.')[-1] }}; style-src 'self' 'unsafe-inline' *.{{ item.split('.')[-2] }}.{{ item.split('.')[-1] }} *.googleapis.com; font-src 'self' data: themes.googleusercontent.com fonts.gstatic.com; child-src *.{{ item.split('.')[-2] }}.{{ item.split('.')[-1] }}; object-src 'none'";
{% if ngx_HPKP is defined %}
  # Enables Public Key Pinning Extension for HTTP (HPKP).
  add_header Public-Key-Pins 'pin-sha256="{{ "\"; pin-sha256=\"".join(vars["ngx_HPKP"]) }}"; max-age=63072000; includeSubDomains';
{% endif %}
  # The spec for Referrer Policy.
  add_header Referrer-Policy "no-referrer-when-downgrade";
  # HSTS (ngx_http_headers_module is required) (31536000 seconds = 12 months)
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;";
  # Disable content-type sniffing on some browsers.
  add_header X-Content-Type-Options "nosniff";
  # Don't allow the browser to render the page inside an frame or iframe and avoid clickjacking.
  add_header X-Frame-Options "SAMEORIGIN";
  # Enables the Cross-site scripting (XSS) filter built into web browsers.
  add_header X-Xss-Protection "1; mode=block";
{% if ngx_dhparam %}
  # Diffie-Hellman parameter for DHE ciphersuites.
  ssl_dhparam             ssl/dhparam.pem;
{% endif %}
  # Certs sent to the client in SERVER HELLO are concatenated.
  ssl_certificate         ssl/certificate.pem;
  ssl_certificate_key     ssl/server.key;
  ssl_session_cache shared:SSL:50m;
  ssl_session_ticket_key  ssl/session_ticket.key;
  ssl_session_tickets off;
  ssl_session_timeout 60m;
  # Verify chain of trust of OCSP response using Root CA and Intermediate certs.
  ssl_trusted_certificate ssl/certificate.pem;
  # Enables OCSP Stapling (fetch OCSP records from URL in ssl_certificate and cache them).
  ssl_stapling on;
  ssl_stapling_verify on;
  # Enables server-side protection from BEAST attacks.
  ssl_prefer_server_ciphers on;
  ssl_protocols: {{ vars["ngx_ssl_protocols_" + ngx_ssl_protocols].protocols }};
  ssl_ciphers: {{ vars["ngx_ssl_protocols_" + ngx_ssl_protocols].ciphers }};
  listen {{ ngx_port_https }} ssl http2;
  resolver {{ " ".join(vars["ngx_resolver_dns"]) }} valid=300s;
  resolver_timeout {{ ngx_resolver_timeout }};
  server_name {{ item }};

  charset {{ ngx_arg.charset }};
  root {{ ngx_site_path }}/{{ item }};
  index index.html;

  access_log {{ ngx_logs_path }}/access.log main;
  error_log {{ ngx_logs_path }}/error.log notice;
{% if ngx_syslog %}
  access_log syslog:server={{ ngx_syslog_server }}:{{ ngx_acc_syslog_port }} syslog;
  error_log syslog:server={{ ngx_syslog_server }}:{{ ngx_err_syslog_port }};
{% endif %}
  
  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt { access_log off; log_not_found off; }
{% if ngx_pagespeed %}
  location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
  location /ngx_pagespeed_admin { allow {{ "; allow ".join(vars["ngx_set_real_ip_from"]) }}; access_log off; deny all; }
{% endif %}

  include {{ ngx_conf_path }}/security.conf;

  # FastCGI Example Configuration #
  #location ~ \.php$ {
  #  expires -1;
  #  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  #  fastcgi_pass backend;
  #  include fastcgi_params;
  #  index index.php; 
  #}

  # Proxy Example Configuration #
  #location ~ \.jsp$ {
  #  expires -1;
  #  proxy_pass backend;
  #}
}

# Back-end Example Configuration #
#upstream backend {
#  server 127.0.0.1:9000 max_fails=3 fail_timeout=20s;
#}
